// Generated by gencpp from file yumi_scripts/JointConfigMsg.msg
// DO NOT EDIT!


#ifndef YUMI_SCRIPTS_MESSAGE_JOINTCONFIGMSG_H
#define YUMI_SCRIPTS_MESSAGE_JOINTCONFIGMSG_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <yumi_scripts/JointMsg.h>

namespace yumi_scripts
{
template <class ContainerAllocator>
struct JointConfigMsg_
{
  typedef JointConfigMsg_<ContainerAllocator> Type;

  JointConfigMsg_()
    : group_name()
    , joints()
    , total_joints(0)  {
    }
  JointConfigMsg_(const ContainerAllocator& _alloc)
    : group_name(_alloc)
    , joints(_alloc)
    , total_joints(0)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _group_name_type;
  _group_name_type group_name;

   typedef  ::yumi_scripts::JointMsg_<ContainerAllocator>  _joints_type;
  _joints_type joints;

   typedef uint32_t _total_joints_type;
  _total_joints_type total_joints;





  typedef boost::shared_ptr< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> const> ConstPtr;

}; // struct JointConfigMsg_

typedef ::yumi_scripts::JointConfigMsg_<std::allocator<void> > JointConfigMsg;

typedef boost::shared_ptr< ::yumi_scripts::JointConfigMsg > JointConfigMsgPtr;
typedef boost::shared_ptr< ::yumi_scripts::JointConfigMsg const> JointConfigMsgConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::yumi_scripts::JointConfigMsg_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace yumi_scripts

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'yumi_scripts': ['/home/yumi/yumi_ws/src/yumi/yumi_scripts/msg'], 'shape_msgs': ['/opt/ros/kinetic/share/shape_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/kinetic/share/sensor_msgs/cmake/../msg'], 'moveit_msgs': ['/opt/ros/kinetic/share/moveit_msgs/cmake/../msg'], 'trajectory_msgs': ['/opt/ros/kinetic/share/trajectory_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'object_recognition_msgs': ['/opt/ros/kinetic/share/object_recognition_msgs/cmake/../msg'], 'octomap_msgs': ['/opt/ros/kinetic/share/octomap_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'visualization_msgs': ['/opt/ros/kinetic/share/visualization_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "f0f52f3d837f89f138f5c791e3fdd443";
  }

  static const char* value(const ::yumi_scripts::JointConfigMsg_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xf0f52f3d837f89f1ULL;
  static const uint64_t static_value2 = 0x38f5c791e3fdd443ULL;
};

template<class ContainerAllocator>
struct DataType< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "yumi_scripts/JointConfigMsg";
  }

  static const char* value(const ::yumi_scripts::JointConfigMsg_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "string group_name\n\
JointMsg joints\n\
uint32 total_joints\n\
================================================================================\n\
MSG: yumi_scripts/JointMsg\n\
float64[] joint_values\n\
";
  }

  static const char* value(const ::yumi_scripts::JointConfigMsg_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.group_name);
      stream.next(m.joints);
      stream.next(m.total_joints);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct JointConfigMsg_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::yumi_scripts::JointConfigMsg_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::yumi_scripts::JointConfigMsg_<ContainerAllocator>& v)
  {
    s << indent << "group_name: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.group_name);
    s << indent << "joints: ";
    s << std::endl;
    Printer< ::yumi_scripts::JointMsg_<ContainerAllocator> >::stream(s, indent + "  ", v.joints);
    s << indent << "total_joints: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.total_joints);
  }
};

} // namespace message_operations
} // namespace ros

#endif // YUMI_SCRIPTS_MESSAGE_JOINTCONFIGMSG_H
